---
import { Image } from "astro:assets";

const links = {
store: "https://store.teaclient.net",
download: "/",
news: "/news",
wiki: "/wiki",
};
---

<section
  class="top-nav bg-[var(--nav-color)] flex flex-row items-center justify-between text-white h-[90px] p-[0.7rem]"
>
  <div class="flex flex-row items-center justify-center">
    <a href="/">
      <Image
        src="/icon.webp"
        width="96"
        height="96"
        alt="TeaClient Logo"
        loading="eager"
        id="logo"
      />
    </a>
    <a href="/" class="text-white hover:text-purple-600">Tea Client</a>
  </div>
  <input id="menu-toggle" class="hidden" type="checkbox" />
  <label
    class="menu-button-container flex 2xl:hidden max-sm:flex h-[100%] w-[30px] justify-center flex-col cursor-pointer items-center"
    for="menu-toggle"
  >
    <div class="menu-button before:mt-[-8px] after:mt-[8px]"></div>
  </label>
  <ul class="menu flex flex-row list-none m-0 p-0 *:mx-4 *:overflow-hidden">
    <li>
      <input
        type="checkbox"
        class="checkbox absolute opacity-0"
        id="checkbox"
      />
      <label
        for="checkbox"
        class="checkbox-label bg-[#2e2e2e] w-[50px] h-[26px] rounded-[50px] relative p-[5px] cursor-pointer flex justify-between items-center"
        aria-label="Toggle theme"
      >
        <i class="fas text-[f1c40f]"></i>
        <i class="fas text-[#f39c12]"></i>
        <span class="ball"></span>
        <span
          class="sr-only absolute w-[1px] h-[1px] p-0 m-[-1px] overflow-hidden border-0"
          >Toggle theme</span
        >
      </label>
    </li>
    <li><a href="/">HOME</a></li>
    <li><a href=`${links.store}`>STORE</a></li>
    <li><a href=`${links.wiki}`>WIKI</a></li>
    <li><a href=`${links.news}`>NEWS</a></li>
    <li><a class="font-bold bg-[#00000084] bg-[#6e2bec] rounded-lg 2xl:hover:bg-[#9359ff] ignore-a" href=`${links.download}`>DOWNLOAD</a></li>
  </ul>
</section>

<div class="page-background">
  <img
    class="fixed top-0 left-0 w-full h-full object-cover object-center -z-10 pointer-events-none [-webkit-user-drag: none] select-none"
    id="background-image"
    src="/background/1.webp"
    alt="The background"
    loading="lazy"
    decoding="async"
  />
</div>

<script>
  const button = document.querySelector(".checkbox") as HTMLInputElement;
  function switchTheme() {
    const currentTheme = document.documentElement.getAttribute("data-theme");
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    document.documentElement.setAttribute("data-theme", newTheme);
    localStorage.setItem("theme", newTheme);
    button.checked = newTheme === "dark";
  }
  document.addEventListener("DOMContentLoaded", () => {
    const currentTheme = localStorage.getItem("theme");
    if (currentTheme) {
      document.documentElement.setAttribute("data-theme", currentTheme);
      button.checked = currentTheme === "dark";
      return;
    }
    document.documentElement.setAttribute("data-theme", "dark");
    localStorage.setItem("theme", "dark");
    button.checked = true;
  });
  button.addEventListener("click", switchTheme);
</script>

<style>
  /* Mobile Button */
  .menu-button,
  .menu-button::before,
  .menu-button::after {
    @apply block absolute h-[4px] w-[30px] rounded bg-white;
    transition: transform 800ms cubic-bezier(0.23, 1, 0.32, 1);
  }

  .menu-button::before {
    content: "";
  }

  #menu-toggle:checked + .menu-button-container .menu-button::after {
    @apply mt-0 -rotate-[405deg] hover:bg-red-500;
  }

  #menu-toggle:checked + .menu-button-container .menu-button::before {
    @apply mt-0  rotate-[405deg] hover:bg-red-500;
  }

  #menu-toggle:checked + .menu-button-container .menu-button {
    @apply contents;
  }

  @media (max-width: 1536px) {
    .menu {
      @apply absolute top-0 mt-[90px] left-0 flex flex-col w-[100%] justify-center items-center z-10;
      backdrop-filter: blur(25px);
      background-color: var(--nav-color);
    }

    #menu-toggle ~ .menu li {
      height: 0;
      margin: 0;
      padding: 0;
      transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
    }

    #menu-toggle:checked ~ .menu li {
      height: 2.5em;
      padding: 0.5em;
      transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
    }
    .menu > li {
      @apply flex justify-center m-0 w-full text-[var(--navBar-Items)];
    }

    #menu-toggle:checked ~ .menu > li a:not(.ignore-a) {
      @apply text-[var(--navBar-Items)] pb-6 rounded-md bg-[#00000066];
    }

    #menu-toggle:checked ~ .menu > li a .ignore-a {
      @apply pb-6 rounded-md;
    }
  }

  li {
    list-style: none;
    display: inline-block;
    padding: 0.5rem 1rem;
    position: relative;
  }

  .menu li:not(.download) a {
    @apply text-[var(--navBar-Items)] p-2 font-bold text-lg;
    text-decoration: none;
  }
  .checkbox-label .ball {
    position: absolute;
    left: 2px;
    top: 2px;
    border-radius: 50%;
    background-color: orange;
    aspect-ratio: 1 / 1;
    width: 22px;
    box-shadow: 0px 0px 4px yellow;
    transition: transform 0.2s linear;
  }

  .checkbox:checked + .checkbox-label .ball {
    background-color: #101010;
    box-shadow: 0px 0px 4px white;
    transform: translateX(24px);
  }
</style>
